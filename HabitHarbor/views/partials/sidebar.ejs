<div class="sidebar">
   
    <div class="profile">
        <div class="profile-title"><h2 id="profile-title-h2">Profile</h2></div>
        <div class="profile-picture centered">
            <img src="./images/profile-pic.png" alt="profile picture" id="profile-pic"/>
        </div>
        <div class="age-title centered">Age</div>
        <div class="height-title centered">Height</div>
        <div class="weight-title centered">Weight</div>
        <div class="age-value centered">--</div>
        <div class="height-value centered">--</div>
        <div class="weight-value centered">--</div>
    </div>
    
    <div class="wrapper">
        <header>
          <p class="current-date">December</p>
          <div class="icon">
            <span id="prev" class="material-symbols-rounded">chevron_left</span>
            <span id="next" class="material-symbols-rounded">chevron_right</span>
          </div>
        </header>
        <div class=" calendar">
          <ul class="weeks">
            <li>Sun</li>
            <li>Mon</li>
            <li>Tue</li>
            <li>Wed</li>
            <li>Thu</li>
            <li>Fri</li>
            <li>Sat</li>
          </ul>
          <ul class="days">
            <li>30</li>
            <li>1</li>
            <li>2</li>
            <li>3</li>
            <li>4</li>
            <li>5</li>
            <li>6</li>
            <li>7</li>
            <li>8</li>
            <li>9</li>
            <li>10</li>
            <li>11</li>
            <li>12</li>
            <li>13</li>
            <li>14</li>
            <li>30</li>
            <li>15</li>
            <li>16</li>
            <li>17</li>
            <li>18</li>
            <li>19</li>
            <li>20</li>
            <li>21</li>
            <li>22</li>
            <li>23</li>
            <li>24</li>
            <li>25</li>
            <li>26</li>
            <li>27</li>
            <li>28</li>
            <li>29</li>
            <li>30</li>
            <li>31</li>
            <li>1</li>
          </ul>
        </div>
      </div>
    <div class="badges-title">
        <h2 id="badge-title">Badges</h2>
        <i class="bi bi-plus-lg clickable" id="plus-badge"></i>
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-lg" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M8 2a.5.5 0 0 1 .5.5v5h5a.5.5 0 0 1 0 1h-5v5a.5.5 0 0 1-1 0v-5h-5a.5.5 0 0 1 0-1h5v-5A.5.5 0 0 1 8 2"/>
          </svg>
        <button class="seeAll">SeeAll-></button>
    </div>
    <div class="badges">
        <button class="first-badge" onClick="return modalForm(this);">
            <h5 class="badge-title">100 days Physical Activity Badge</h5>
            <img src="./images/gold-badge.png" alt="physical badge" id="img-badge1"/>
        </button>
        <button class="second-badge" onClick="return modalForm(this);">
            <h5 class="badge-title">50 days Nutrition Activity Badge</h5>
            <img src="./images/silver-badge.png" alt="nutrition badge" id="img-badge2"/>
        </button>
        <button class="third-badge" onClick="return modalForm(this);">
            <h5 class="badge-title">10 days Reading Activity Badge</h5>
            <img src="./images/bronze-badge.png" alt="reading badge" id="img-badge3"/>
        </button>
    </div>
</div>
<script>
    const daysTag = document.querySelector(".days"),
    currentDate = document.querySelector(".current-date"),
    prevNextIcon = document.querySelectorAll(".icon span");
    
    // getting new date, current year and month
    let date = new Date(),
    currYear = date.getFullYear(),
    currMonth = date.getMonth();
    currDay = date.getDay;
    // storing full name of all months in array
    const months = ["January", "February", "March", "April", "May", "June", "July",
                  "August", "September", "October", "November", "December"];
    
    const renderCalendar = () => {
        let firstDayofMonth = new Date(currYear, currMonth, 1).getDay(), // getting first day of month
        lastDateofMonth = new Date(currYear, currMonth + 1, 0).getDate(), // getting last date of month
        lastDayofMonth = new Date(currYear, currMonth, lastDateofMonth).getDay(), // getting last day of month
        lastDateofLastMonth = new Date(currYear, currMonth, 0).getDate(); // getting last date of previous month
        let liTag = "";
    
        for (let i = firstDayofMonth; i > 0; i--) { // creating li of previous month last days
            liTag += `<li class="inactive">${lastDateofLastMonth - i + 1}</li>`;        }

        for (let i = 1; i <= lastDateofMonth; i++) { // creating li of all days of current month
            // adding active class to li if the current day, month, and year matched
            let isToday = i === currDay && currMonth === new Date().getMonth() 
                         && currYear === new Date().getFullYear() ? "active" : "inactive";
            liTag += `<li class="${isToday}">${i}</li>`;
        }
    
        for (let i = lastDayofMonth; i < 1; i++) { // creating li of next month first days
            liTag += `<li class="inactive">${i - lastDayofMonth + 1}</li>`
        }
        currentDate.innerText = `${months[currMonth]} ${currYear}`; // passing current mon and yr as currentDate text
        daysTag.innerHTML = liTag;
    }
    renderCalendar();
    
    prevNextIcon.forEach(icon => { // getting prev and next icons
        icon.addEventListener("click", () => { // adding click event on both icons
            // if clicked icon is previous icon then decrement current month by 1 else increment it by 1
            currMonth = icon.id === "prev" ? currMonth - 1 : currMonth + 1;
    
            if(currMonth < 0 || currMonth > 11) { // if current month is less than 0 or greater than 11
                // creating a new date of current year & month and pass it as date value
                date = new Date(currYear, currMonth, new Date().getDate());
                currYear = date.getFullYear(); // updating current year with new date year
                currMonth = date.getMonth(); // updating current month with new date month
            } else {
                date = new Date(); // pass the current date as date value
            }
            renderCalendar(); // calling renderCalendar function
        });
    });</script>